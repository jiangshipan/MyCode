package DataStructure;/** * 队列 */public class MyQueue {    private int[] array;    private int front;    private int rear;    public MyQueue(int capacity) {        this.array = new int[capacity];    }    /**     * 入队     * @param element 入队元素     * @throws Exception     */    public void enQueue(int element) throws Exception {        if ((rear + 1) % array.length == front) {            throw new Exception("队列已满");        }        array[rear] = element;        rear = (rear + 1) % array.length;    }    /**     * 出队     * @return     * @throws Exception     */    public int deQueue() throws Exception {        if (rear == front) {            throw new Exception("队列已空");        }        int deQueueElement = array[front];        front = (front + 1) % array.length;        return deQueueElement;    }    /**     * 输出队列     */    public void output() {        for (int i = front; i != rear; i = (i + 1) % array.length) {            System.out.println(array[i]);        }    }    public static void main(String[] args) throws Exception{        MyQueue queue = new MyQueue(5);        queue.enQueue(1);        queue.enQueue(2);        queue.enQueue(3);        queue.enQueue(4);        System.out.println(queue.deQueue());        System.out.println(queue.deQueue());        queue.enQueue(5);        queue.enQueue(6);        queue.output();    }}