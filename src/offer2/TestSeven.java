package offer2;/** * 树的子结构 * * 1. 先找节点相同的， 然后判断root2是不是root1的子树 * 2. 若上一步没找到，继续遍历root1节点找相同的值 */public class TestSeven {    public boolean HasSubtree(TreeNode root1,TreeNode root2) {        boolean result = false;        if (root2 == null) {            return false;        }        //找相同头节点        if (root1 != null && root2 != null) {            if (root1.val == root2.val) {                result = test2(root1, root2);            }            if (!result) {                result = HasSubtree(root1.left, root2);            }            if (!result) {                result = HasSubtree(root1.right, root2);            }        }        return result;    }    public static boolean test2(TreeNode root1, TreeNode root2) {        if (root2 == null) {            return true;        }        if (root1 == null) {            return false;        }        if (root1.val != root2.val) {            return false;        }        return test2(root1.left, root2.left) && test2(root2.right, root2.right);    }}class TreeNode {    int val = 0;    TreeNode left = null;    TreeNode right = null;    public TreeNode(int val) {        this.val = val;    }}