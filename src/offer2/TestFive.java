package offer2;import java.util.Stack;public class TestFive {    public static void main(String[] args) {        ListNode head = new ListNode(1);        head.next = new ListNode(2);        head.next.next = new ListNode(3);        head.next.next.next = new ListNode(4);        head.next.next.next.next = new ListNode(5);        head.next.next.next.next.next = new ListNode(6);        ListNode node = ReverseList(head);        while (node.next != null) {            System.out.println(node.val);            node = node.next;        }    }    public static ListNode ReverseList(ListNode head) {        if (head == null) {            return null;        }        Stack<ListNode> stack = new Stack<>();        while (head != null) {            stack.push(head);            head = head.next;        }        ListNode newNode = stack.pop();        ListNode newNode2 = newNode;        while (!stack.isEmpty()) {            newNode2.next = stack.pop();            newNode2 = newNode2.next;        }        newNode2.next = null;        return newNode;    }    public static ListNode ReverseList1(ListNode head) {        if (head == null || head.next == null) {            return head;        }        ListNode oldHead = head;        ListNode newHead = head;        ListNode toBeReversed = head.next;        while (toBeReversed != null) {            oldHead.next = toBeReversed.next;            toBeReversed.next = newHead;            newHead = toBeReversed;            toBeReversed = oldHead.next;        }        return newHead;    }}