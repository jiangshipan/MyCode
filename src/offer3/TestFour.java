package offer3;import java.util.ArrayList;public class TestFour {    ArrayList<ArrayList<Integer>> res = new ArrayList<>();    ArrayList<Integer> path = new ArrayList<>();    public ArrayList<ArrayList<Integer>> FindPath(TreeNode root, int target) {        if (root == null) {            return res;        }        findPath(root, target);        return res;    }    public void findPath(TreeNode root, int target) {        path.add(root.val);        if (root.val == target && root.left == null && root.right == null) {            res.add(new ArrayList<>(path));        }        //左子树非空        if (root.left != null) {            findPath(root.left, target - root.val);        }        //右子树非空        if (root.right != null) {            findPath(root.right, target - root.val);        }        //去掉最后一个，返回父节点，去查找另外一条路径        path.remove(path.size() - 1);    }}