package offer3;public class TestThree {    public static void main(String[] args) {        int[] sequence = {4,6,7,5};        boolean b = VerifySquenceOfBST(sequence);        System.out.println(b);    }    public static boolean VerifySquenceOfBST(int [] sequence) {        if (sequence == null || sequence.length <= 0) {            return false;        }        if (sequence.length == 1) {            return true;        }        return judge(sequence, sequence.length);    }    public static boolean judge(int[] sequence, int length) {        int root = sequence[length - 1];        int i = 0;        //左子树小于根节点        for (; i < length - 1; i++) {            if (sequence[i] > root){                break;            }        }        //右节点大于根        int j = i;        for (; j < length - 1; j++) {            if (sequence[j] < root) {                return false;            }        }        //判断左子树是不是二叉搜索树        boolean left = true;        if (i > 0) {            //存在左子树            left = judge(sequence, i);        }        boolean right = true;        if (i < length - 1) {            right = judge(sequence, length - i - 1);        }        return right && left;    }}